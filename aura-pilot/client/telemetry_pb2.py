# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0ftelemetry.proto\x12\ttelemetry\"3\n\x10TelemetryRequest\x12\x11\n\tswitch_id\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\t\"\x95\x03\n\rTelemetryData\x12\x11\n\ttimestamp\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\t\x12\x11\n\tlinkState\x18\x03 \x01(\t\x12\x0b\n\x03SNR\x18\x04 \x01(\x02\x12\x17\n\x0f\x46\x45\x43_Correctable\x18\x05 \x01(\x02\x12\x19\n\x11\x46\x45\x43_Uncorrectable\x18\x06 \x01(\x02\x12\x15\n\rCRCErrorCount\x18\x07 \x01(\x02\x12\x13\n\x0bTemperature\x18\x08 \x01(\x02\x12\x0f\n\x07Voltage\x18\t \x01(\x02\x12\x10\n\x08\x46\x61nSpeed\x18\n \x01(\x02\x12\x10\n\x08Humidity\x18\x0b \x01(\x02\x12\x0f\n\x07\x41irflow\x18\x0c \x01(\x02\x12\x1a\n\x12\x41mbientTemperature\x18\r \x01(\x02\x12\x16\n\x0eOpticalRxPower\x18\x0e \x01(\x02\x12\x16\n\x0eOpticalTxPower\x18\x0f \x01(\x02\x12\x13\n\x0bLinkLatency\x18\x10 \x01(\x02\x12\x1b\n\x13\x43\x61\x62leLengthEstimate\x18\x11 \x01(\x02\x12\x1f\n\x17\x43onnectorInsertionCount\x18\x12 \x01(\x05\x32\x63\n\x10TelemetryService\x12O\n\x12SubscribeTelemetry\x12\x1b.telemetry.TelemetryRequest\x1a\x18.telemetry.TelemetryData\"\x00\x30\x01\x62\x06proto3')



_TELEMETRYREQUEST = DESCRIPTOR.message_types_by_name['TelemetryRequest']
_TELEMETRYDATA = DESCRIPTOR.message_types_by_name['TelemetryData']
TelemetryRequest = _reflection.GeneratedProtocolMessageType('TelemetryRequest', (_message.Message,), {
  'DESCRIPTOR' : _TELEMETRYREQUEST,
  '__module__' : 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:telemetry.TelemetryRequest)
  })
_sym_db.RegisterMessage(TelemetryRequest)

TelemetryData = _reflection.GeneratedProtocolMessageType('TelemetryData', (_message.Message,), {
  'DESCRIPTOR' : _TELEMETRYDATA,
  '__module__' : 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:telemetry.TelemetryData)
  })
_sym_db.RegisterMessage(TelemetryData)

_TELEMETRYSERVICE = DESCRIPTOR.services_by_name['TelemetryService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TELEMETRYREQUEST._serialized_start=30
  _TELEMETRYREQUEST._serialized_end=81
  _TELEMETRYDATA._serialized_start=84
  _TELEMETRYDATA._serialized_end=489
  _TELEMETRYSERVICE._serialized_start=491
  _TELEMETRYSERVICE._serialized_end=590
# @@protoc_insertion_point(module_scope)
